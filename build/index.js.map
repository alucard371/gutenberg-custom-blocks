{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/blocks/coverBlock/edit.js","webpack:///./src/blocks/coverBlock/editClass.js","webpack:///./src/blocks/coverBlock/editor.scss","webpack:///./src/blocks/coverBlock/index.js","webpack:///./src/blocks/coverBlock/save.js","webpack:///./src/blocks/menuBlock/edit.js","webpack:///./src/blocks/menuBlock/editor.scss","webpack:///./src/blocks/menuBlock/index.js","webpack:///./src/blocks/menuBlock/save.js","webpack:///./src/blocks/todoList/edit.js","webpack:///./src/blocks/todoList/editor.scss","webpack:///./src/blocks/todoList/index.js","webpack:///./src/blocks/todoList/save.js","webpack:///external {\"this\":[\"wp\",\"blocks\"]}","webpack:///external {\"this\":[\"wp\",\"components\"]}","webpack:///external {\"this\":[\"wp\",\"editor\"]}","webpack:///external {\"this\":[\"wp\",\"element\"]}","webpack:///external {\"this\":[\"wp\",\"i18n\"]}"],"names":["Edit","className","attributes","setAttributes","console","log","content","alignment","backgroundColor","textColor","onChangeContent","onChangeAlignment","onChangeBackgroundColor","onChangeTextColor","__","value","onChange","label","length","icon","title","onClick","alert","isActive","textAlign","color","EditClass","Component","props","render","registerBlockType","description","category","keywords","styles","name","isDefault","supports","html","type","source","selector","alignement","edit","save","el","wp","element","createElement","background","foreground","src"],"mappings":"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","file":"index.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"style-index\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tRichText,\n\tBlockControls,\n\tAlignmentToolbar,\n\tInspectorControls,\n\tPanelColorSettings\n} from '@wordpress/editor';\n\nimport { Fragment } from '@wordpress/element'\nimport {\n\tToolbar,\n\tDropdownMenu,\n\tPanelBody,\n\tToggleControl,\n\tColorPicker,\n\tColorPalette\n} from '@wordpress/components'\n\n\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * Those files can contain any CSS code that gets applied to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './editor.scss';\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n *\n * @param {Object} [props]           Properties passed from the editor.\n * @param {string} [props.className] Class name generated for the block.\n *\n * @return {WPElement} Element to render.\n */\n\n\nexport default function Edit( { className, attributes, setAttributes } ) {\n\tconsole.log(attributes);\n\tconst { content, alignment,backgroundColor, textColor } = attributes;\n\tconst onChangeContent = (content) => {\n\t\tsetAttributes({ content })\n\t}\n\tconst onChangeAlignment = (alignment) => {\n\t\tsetAttributes({ alignment })\n\t}\n\tconst onChangeBackgroundColor = (backgroundColor) => {\n\t\tsetAttributes({ backgroundColor })\n\t}\n\tconst onChangeTextColor = (textColor) => {\n\t\tsetAttributes({ textColor })\n\t}\n\treturn(\n\t<>\n\t\t<InspectorControls>\n\t\t\t<PanelColorSettings\n\t\t\t\ttitle={__('Panel Color Settings', 'qtd-blocks')}\n\t\t\t\tcolorSettings={[\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: backgroundColor,\n\t\t\t\t\t\tonChange: onChangeBackgroundColor,\n\t\t\t\t\t\tlabel: __('Background color', 'qtd-blocks')\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: textColor,\n\t\t\t\t\t\tonChange: onChangeTextColor,\n\t\t\t\t\t\tlabel: __('Text color', 'qtd-blocks')\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t>\n\n\t\t\t</PanelColorSettings>\n\t\t{/*\t<PanelBody\n\t\t\ttitle={__('Panel', 'qtd-blocks')}>\n\t\t\t\t<ToggleControl\n\t\t\t\tlabel=\"Hello world!!!\"\n\t\t\t\tonChange={(v) => console.log(v)}\n\t\t\t\t/>\n\t\t\t\t<ColorPicker\n\t\t\t\tcolor=\"#dedede\"\n\t\t\t\tonChangeComplete = {(v) => console.log((v))}\n\t\t\t\t/>\n\t\t\t\t<ColorPalette\n\t\t\t\tcolors={[\n\t\t\t\t\t{color: '#f03'},\n\t\t\t\t\t{color: '#dedede'},\n\t\t\t\t\t{color: '#d52'},\n\t\t\t\t\t{color: '#b28'},\n\t\t\t\t\t]}\n\t\t\t\tonChange={onChangeBackgroundColor}\n\t\t\t\t/>\n\n\n\t\t\t</PanelBody>*/}\n\t\t</InspectorControls>\n\t\t<BlockControls\n\t\t\t/*controls={ [\n\t\t\t\t[{\n\t\t\t\t\ticon: 'editor-alignleft',\n\t\t\t\t\ttitle: __('left', 'qtdtheme'),\n\t\t\t\t\tonClick: () => onChangeAlignment('left'),\n\t\t\t\t\tisActive: true\n\t\t\t\t}],\n\t\t\t\t[{\n\t\t\t\t\ticon: 'editor-aligncenter',\n\t\t\t\t\ttitle: __('center', 'qtdtheme'),\n\t\t\t\t\tonClick: () => onChangeAlignment('center'),\n\t\t\t\t\tisActive: true\n\t\t\t\t}],\n\t\t\t\t[{\n\t\t\t\t\ticon: 'editor-alignright',\n\t\t\t\t\ttitle: __('right', 'qtdtheme'),\n\t\t\t\t\tonClick: () => onChangeAlignment('right'),\n\t\t\t\t\tisActive: true\n\t\t\t\t}]\n\t\t\t]}*/\n\t\t>\n\n\t\t\t<AlignmentToolbar\n\t\t\t\tvalue = {alignment}\n\t\t\t\tonChange={(alignment)=>onChangeAlignment(alignment)}\n\t\t\t/>\n\t\t\t{(content && content.length > 0) &&\n\t\t\t<Toolbar>\n\t\t\t\t<DropdownMenu\n\t\t\t\t\ticon=\"editor-table\"\n\t\t\t\t\tlabel=\"Dropdown menu\"\n\t\t\t\t\tcontrols={[\n\t\t\t\t\t\t[{\n\t\t\t\t\t\t\ticon: 'wordpress',\n\t\t\t\t\t\t\ttitle: __('test', 'qtdtheme'),\n\t\t\t\t\t\t\tonClick: () => alert(true),\n\t\t\t\t\t\t\tisActive: false\n\t\t\t\t\t\t}],\n\t\t\t\t\t\t[{\n\t\t\t\t\t\t\ticon: 'admin-site',\n\t\t\t\t\t\t\ttitle: __('test', 'qtdtheme'),\n\t\t\t\t\t\t\tonClick: () => alert(false),\n\t\t\t\t\t\t\tisActive: true\n\t\t\t\t\t\t}]\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</Toolbar>\n\t\t\t}\n\t\t</BlockControls>\n\t\t<RichText\n\t\t\ttagName=\"p\"\n\t\t\tclassName={ className}\n\t\t\tonChange={onChangeContent}\n\t\t\tvalue={ content }\n\t\t\tstyle={{\n\t\t\t\ttextAlign: alignment,\n\t\t\t\tbackgroundColor: backgroundColor,\n\t\t\t\tcolor: textColor}}\n\t\t\t// formattingControls={[]}\n\t\t/>\n\n\n\t</>\n\t)\n}\n","import { Component } from '@wordpress/element'\nimport {AlignmentToolbar, BlockControls, InspectorControls, PanelColorSettings, RichText} from \"@wordpress/editor\";\nimport {__} from \"@wordpress/i18n\";\nimport {DropdownMenu, Toolbar} from \"@wordpress/components\";\n\nclass EditClass extends Component{\n\n\tonChangeContent = (content) => {\n\t\tthis.props.setAttributes({ content })\n\t}\n\tonChangeAlignment = (alignment) => {\n\t\tthis.props.setAttributes({ alignment })\n\t}\n\tonChangeBackgroundColor = (backgroundColor) => {\n\t\tthis.props.setAttributes({ backgroundColor })\n\t}\n\tonChangeTextColor = (textColor) => {\n\t\tthis.props.setAttributes({ textColor })\n\t}\n\n\trender() {\n\t\tconst { className, attributes } = this.props;\n\t\tconst { content, alignment,backgroundColor, textColor } = attributes;\n\t\treturn(\n\t\t\t<>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelColorSettings\n\t\t\t\t\t\ttitle={__('Panel Color Settings', 'qtd-blocks')}\n\t\t\t\t\t\tcolorSettings={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: backgroundColor,\n\t\t\t\t\t\t\t\tonChange: this.onChangeBackgroundColor,\n\t\t\t\t\t\t\t\tlabel: __('Background color', 'qtd-blocks')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: textColor,\n\t\t\t\t\t\t\t\tonChange: this.onChangeTextColor,\n\t\t\t\t\t\t\t\tlabel: __('Text color', 'qtd-blocks')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t>\n\n\t\t\t\t\t</PanelColorSettings>\n\t\t\t\t\t{/*\t<PanelBody\n\t\t\ttitle={__('Panel', 'qtd-blocks')}>\n\t\t\t\t<ToggleControl\n\t\t\t\tlabel=\"Hello world!!!\"\n\t\t\t\tonChange={(v) => console.log(v)}\n\t\t\t\t/>\n\t\t\t\t<ColorPicker\n\t\t\t\tcolor=\"#dedede\"\n\t\t\t\tonChangeComplete = {(v) => console.log((v))}\n\t\t\t\t/>\n\t\t\t\t<ColorPalette\n\t\t\t\tcolors={[\n\t\t\t\t\t{color: '#f03'},\n\t\t\t\t\t{color: '#dedede'},\n\t\t\t\t\t{color: '#d52'},\n\t\t\t\t\t{color: '#b28'},\n\t\t\t\t\t]}\n\t\t\t\tonChange={onChangeBackgroundColor}\n\t\t\t\t/>\n\n\n\t\t\t</PanelBody>*/}\n\t\t\t\t</InspectorControls>\n\t\t\t\t<BlockControls\n\t\t\t\t>\n\n\t\t\t\t\t<AlignmentToolbar\n\t\t\t\t\t\tvalue = {alignment}\n\t\t\t\t\t\tonChange={(alignment)=>this.onChangeAlignment(alignment)}\n\t\t\t\t\t/>\n\t\t\t\t\t{(content && content.length > 0) &&\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<DropdownMenu\n\t\t\t\t\t\t\ticon=\"editor-table\"\n\t\t\t\t\t\t\tlabel=\"Dropdown menu\"\n\t\t\t\t\t\t\tcontrols={[\n\t\t\t\t\t\t\t\t[{\n\t\t\t\t\t\t\t\t\ticon: 'wordpress',\n\t\t\t\t\t\t\t\t\ttitle: __('test', 'qtdtheme'),\n\t\t\t\t\t\t\t\t\tonClick: () => alert(true),\n\t\t\t\t\t\t\t\t\tisActive: false\n\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t[{\n\t\t\t\t\t\t\t\t\ticon: 'admin-site',\n\t\t\t\t\t\t\t\t\ttitle: __('test', 'qtdtheme'),\n\t\t\t\t\t\t\t\t\tonClick: () => alert(false),\n\t\t\t\t\t\t\t\t\tisActive: true\n\t\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t}\n\t\t\t\t</BlockControls>\n\t\t\t\t<RichText\n\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\tclassName={ className}\n\t\t\t\t\tonChange={this.onChangeContent}\n\t\t\t\t\tvalue={ content }\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttextAlign: alignment,\n\t\t\t\t\t\tbackgroundColor: backgroundColor,\n\t\t\t\t\t\tcolor: textColor}}\n\t\t\t\t\t// formattingControls={[]}\n\t\t\t\t/>\n\n\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default EditClass;\n","// extracted by mini-css-extract-plugin","import EditClass from \"./editClass\";\n\n/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nregisterBlockType( 'create-block/cover-block', {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __( 'Cover block', 'cover-block' ),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __(\n\t\t'Description de votre bloc custom',\n\t\t'cover-block'\n\t),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and discover them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: 'qtd-blocks-category',\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPress’ Dashicons, or a custom svg element.\n\t */\n\ticon: <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3 5v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2H5c-1.11 0-2 .9-2 2zm12 4c0 1.66-1.34 3-3 3s-3-1.34-3-3 1.34-3 3-3 3 1.34 3 3zm-9 8c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1H6v-1z\"/></svg>,\n\n\tkeywords: [__('list', 'cover-block'),__('organise', 'cover-block')],\n\n\tstyles: [\n\t\t{\n\t\t\tname: 'rounded',\n\t\t\tlabel: __('Rounded', 'qtd-blocks'),\n\t\t\tisDefault: true,\n\t\t},\n\t\t{\n\t\t\tname: 'squared',\n\t\t\tlabel: __('Squared', 'qtd-blocks')\n\t\t},\n\t\t{\n\t\t\tname: 'outlined',\n\t\t\tlabel: __('Outlined', 'qtd-blocks')\n\t\t}\n\t],\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n\t\thtml: false,\n\t},\n\n\tattributes: {\n\t\tcontent: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tselector: 'p'\n\t\t},\n\t\talignement: {\n\t\t\ttype:'string',\n\t\t},\n\t\ttextColor: {\n\t\t\ttype:'string',\n\t\t},\n\t\tbackgroundColor: {\n\t\t\ttype:'string',\n\t\t}\n\t},\n\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: EditClass,\n\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n} );\n","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\nimport { RichText } from '@wordpress/editor';\nvar el = wp.element.createElement;\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n *\n * @return {WPElement} Element to render.\n */\nexport default function save(\n\t{attributes}\n) {\n\tconst { content, alignment,backgroundColor, textColor } = attributes;\n\treturn <RichText.Content\n\ttagName=\"p\"\n\tvalue={ content }\n\tstyle={{\n\t\ttextAlign: alignment,\n\t\tbackgroundColor: backgroundColor,\n\t\tcolor: textColor }}\n\t/>;\n}\n","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\nvar el = wp.element.createElement;\n\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * Those files can contain any CSS code that gets applied to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './editor.scss';\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n *\n * @param {Object} [props]           Properties passed from the editor.\n * @param {string} [props.className] Class name generated for the block.\n *\n * @return {WPElement} Element to render.\n */\nexport default function Edit( { className } ) {\n\treturn <p className={ className }>\"This is the new test edit function of the menu block </p>;\n}\n","// extracted by mini-css-extract-plugin","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nregisterBlockType( 'create-block/menu-block', {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __( 'menu block', 'menu-block' ),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __(\n\t\t'Description de votre bloc custom',\n\t\t'menu-block'\n\t),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and dismenu them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: 'widgets',\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPress’ Dashicons, or a custom svg element.\n\t */\n\ticon: <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z\"/></svg>,\n\n\tkeywords: [__('list', 'menu-block'),__('organise', 'menu-block')],\n\n\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n\t\thtml: false,\n\t},\n\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n} );\n","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\nvar el = wp.element.createElement;\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n *\n * @return {WPElement} Element to render.\n */\nexport default function save() {\n\treturn el('p', null, \"this is the save function of the menu block\");\n}\n","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\nvar el = wp.element.createElement;\n\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * Those files can contain any CSS code that gets applied to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './editor.scss';\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n *\n * @param {Object} [props]           Properties passed from the editor.\n * @param {string} [props.className] Class name generated for the block.\n *\n * @return {WPElement} Element to render.\n */\nexport default function Edit( { className } ) {\n\treturn <p className={ className }>This is the new test edit function in custom start script</p>;\n}\n","// extracted by mini-css-extract-plugin","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nregisterBlockType( 'create-block/todo-block', {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __( 'Todo Block', 'todo-block' ),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __(\n\t\t'Description de votre bloc custom',\n\t\t'todo-block'\n\t),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and discover them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: 'widgets',\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPress’ Dashicons, or a custom svg element.\n\t */\n\ticon: {\n\t\tbackground: \"#f03\",\n\t\tforeground: \"#fff\",\n\t\tsrc: 'text-page',\n\t},\n\n\tkeywords: [__('list', 'todo-block'),__('organise', 'todo-block')],\n\n\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n\t\thtml: false,\n\t},\n\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n} );\n","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\nvar el = wp.element.createElement;\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n *\n * @return {WPElement} Element to render.\n */\nexport default function save() {\n\treturn el('p', null, \"this is the save function\");\n}\n","(function() { module.exports = this[\"wp\"][\"blocks\"]; }());","(function() { module.exports = this[\"wp\"][\"components\"]; }());","(function() { module.exports = this[\"wp\"][\"editor\"]; }());","(function() { module.exports = this[\"wp\"][\"element\"]; }());","(function() { module.exports = this[\"wp\"][\"i18n\"]; }());"],"sourceRoot":""}